---
- name: Install easy-rsa and create keys
  hosts: all
  become: true
  vars:
    easyrsa_dest: "/home/stweise/git/ansible-clientcert-nginx/build"
    easyrsa_dn: "cn_only"
    easyrsa_req_country: "US"
    easyrsa_req_province: "California"
    easyrsa_req_city: "San Francisco"
    easyrsa_req_org: "Copyleft Certificate Co"
    easyrsa_req_email: "me@example.net"
    easyrsa_req_ou: "My Organizational Unit"
    easyrsa_req_cn: "ChangeMe"
    easyrsa_keysize: 2048
    easyrsa_digest: "sha256"
    easyrsa_clients:
      - name: client1
      - name: client2
      - name: client3
#    easyrsa_revoked_clients:
#      - name: client1
#      - name: client2
#      - name: client3
    nginx_http_template_enable: true
    nginx_http_template:
      default:
        template_file: nginx/def.conf.j2
        conf_file_name: def.conf
        conf_file_location: /etc/nginx/conf.d/
        port: 443
        server_name: localhost
        error_page: /usr/share/nginx/html
        autoindex: false
        web_server:
          locations:
            default:
              location: /
              html_file_location: /usr/share/nginx/html
              html_file_name: index.html
              autoindex: false
          http_demo_conf: false
  roles:
    - ansible-easyrsa
    - nginxinc.nginx
  tasks:
    - name: "Creates directory for client certs in PEM format"
      file:
        path: "{{easyrsa_dest}}/easyrsa3/pki/issued_pem"
        state: directory
    - name: "Create the client certs in PEM format"
      command: "openssl x509 -in {{item.name}}.crt -out ../issued_pem/{{item.name}}.pem -outform PEM"
      args:
        chdir: "{{easyrsa_dest}}/easyrsa3/pki/issued"
        creates: "{{easyrsa_dest}}/easyrsa3/pki/issued_pem/{{item.name}}.pem"
      with_items: "{{ easyrsa_clients }}"
    - name: "Create the CA cert in PEM format"
      command: "openssl x509 -in ca.crt -out ca.pem -outform PEM"
      args:
        chdir: "{{easyrsa_dest}}/easyrsa3/pki"
        creates: "{{easyrsa_dest}}/easyrsa3/pki/ca.pem"
    - name: "Create the client full cert including chain in PEM format"
      shell: "cat {{easyrsa_dest}}/easyrsa3/pki/private/{{item.name}}.key {{easyrsa_dest}}/easyrsa3/pki/issued_pem/{{item.name}}.pem {{easyrsa_dest}}/easyrsa3/pki/ca.pem > {{item.name}}.full.pem"
      args:
        chdir: "{{easyrsa_dest}}/easyrsa3/pki/issued_pem"
        creates: "{{easyrsa_dest}}/easyrsa3/pki/issued_pem/{{item.name}}.full.pem"
      with_items: "{{ easyrsa_clients }}"
    - name: "Creates directory for client certs in PFX format"
      file:
        path: "{{easyrsa_dest}}/easyrsa3/pki/issued_pfx"
        state: directory
    - name: "Create the client PKCS#12 archive in PFX format"
      command: "openssl pkcs12 -export -out {{easyrsa_dest}}/easyrsa3/pki/issued_pfx/{{item.name}}.pfx -inkey {{easyrsa_dest}}/easyrsa3/pki/private/{{item.name}}.key -in {{easyrsa_dest}}/easyrsa3/pki/issued_pem/{{item.name}}.pem -certfile {{easyrsa_dest}}/easyrsa3/pki/ca.pem -passout pass: "
      args:
        chdir: "{{easyrsa_dest}}/easyrsa3/pki"
        creates: "{{easyrsa_dest}}/easyrsa3/pki/issued_pfx/{{item.name}}.pfx"
      with_items: "{{ easyrsa_clients }}"
